/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package za.ac.uct.cs.views;

import java.awt.event.ItemEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import org.semanticweb.owlapi.model.OWLOntologyCreationException;
import org.semanticweb.owlapi.model.OWLOntologyStorageException;
import za.ac.uct.cs.controllers.FileUtils;

import za.ac.uct.cs.controllers.Questions;
import za.ac.uct.cs.controllers.OWLHandler;

/**
 *
 * @author SteveW, ChiadikaE
 */
public class MainFrame extends javax.swing.JFrame {

    private String default_owl_file_path;
    private String current_entity_name;
    private Questions question_controller;
    private OWLHandler owl_handler;
    private Vector<String> question_history;

    private static String NO_SELECTION = "None of the above";
    
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        this.default_owl_file_path = OWLHandler.BFO_FILEPATH;
        this.question_controller = new Questions();
        this.question_history = new Vector<>();
        initDecisionProcess();
        initComponents();
        setupFileChooser();
        enableSelection(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FileChooser = new javax.swing.JFileChooser();
        ExtraWindow = new javax.swing.JFrame();
        tabHelp = new javax.swing.JTabbedPane();
        pnlAbout = new javax.swing.JPanel();
        lblAboutHeading = new javax.swing.JLabel();
        spAbout = new javax.swing.JScrollPane();
        txpAboutBody = new javax.swing.JTextPane();
        pnlHelp = new javax.swing.JPanel();
        lblHelpHeading = new javax.swing.JLabel();
        spHelp = new javax.swing.JScrollPane();
        txpHelpBody = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        lblOwlFile = new javax.swing.JLabel();
        txtOwlFilePath = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        lblEntityName = new javax.swing.JLabel();
        txtEntityName = new javax.swing.JTextField();
        btnEntityName = new javax.swing.JButton();
        spQuestion = new javax.swing.JScrollPane();
        txtAreaQuestion = new javax.swing.JTextArea();
        cbQuestionOptions = new javax.swing.JComboBox<>();
        btnPrevQuestion = new javax.swing.JButton();
        btnNextQuestion = new javax.swing.JButton();
        btnInsertAxiom = new javax.swing.JButton();
        txtAxiom = new javax.swing.JTextField();
        btnBrowse = new javax.swing.JButton();
        spQHistory = new javax.swing.JScrollPane();
        txtAreaQHistory = new javax.swing.JTextArea();
        MenuBar = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        ImportOWLFile = new javax.swing.JMenuItem();
        jMenuEdit = new javax.swing.JMenu();
        jMenuRemoveEntity = new javax.swing.JMenuItem();
        jMenuRestart = new javax.swing.JMenuItem();
        jMenuHelp = new javax.swing.JMenu();
        jMenuStartPage = new javax.swing.JMenuItem();
        jMenuAbout = new javax.swing.JMenuItem();

        ExtraWindow.setTitle("Help");
        ExtraWindow.setBounds(new java.awt.Rectangle(0, 0, 402, 321));
        ExtraWindow.setLocation(new java.awt.Point(30, 40));
        ExtraWindow.setLocationByPlatform(true);
        ExtraWindow.setMinimumSize(new java.awt.Dimension(422, 327));
        ExtraWindow.setName("Help â€” About"); // NOI18N
        ExtraWindow.setSize(new java.awt.Dimension(700, 390));

        tabHelp.setBackground(new java.awt.Color(255, 255, 255));
        tabHelp.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        tabHelp.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        tabHelp.setOpaque(true);

        pnlAbout.setBackground(new java.awt.Color(255, 255, 255));
        pnlAbout.setForeground(new java.awt.Color(51, 51, 51));

        lblAboutHeading.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        lblAboutHeading.setText(" About");
        lblAboutHeading.setOpaque(true);

        spAbout.setBackground(new java.awt.Color(255, 255, 255));
        spAbout.setBorder(null);
        spAbout.setForeground(new java.awt.Color(51, 51, 51));
        spAbout.setPreferredSize(new java.awt.Dimension(3788, 530));

        txpAboutBody.setBorder(null);
        txpAboutBody.setContentType("text/html"); // NOI18N
        txpAboutBody.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        txpAboutBody.setForeground(new java.awt.Color(51, 51, 51));
        txpAboutBody.setText("<html>\n\t<div align=justify>\n \t<h2>BFO 2.0 Classifier V1.0.0:</h2>\n\t<p>Entity classifier that allows users to add entities to the correct category in the BFO fundational ontology. Users are required to answer a series of questions generated by the classifier and the resulting axiom can then be added to the ontology.</p>\n\t<br>\n\t<h2>Developed By:</h2>\n\t<p>Chiadika Emeruem</p>\n\t<p>Steve Wang</p>\n            \t<br>\n\t<h2>Supervised By:</h2>\n\t<p>Maria Keet</p>\n\t<p>Univesity of Cape Town</p>\n\t</div>\n</html>\n");
        txpAboutBody.setCaretColor(new java.awt.Color(51, 51, 51));
        txpAboutBody.setMinimumSize(new java.awt.Dimension(127, 333));
        txpAboutBody.setPreferredSize(new java.awt.Dimension(3788, 530));
        txpAboutBody.setSelectionColor(new java.awt.Color(51, 51, 51));
        spAbout.setViewportView(txpAboutBody);

        javax.swing.GroupLayout pnlAboutLayout = new javax.swing.GroupLayout(pnlAbout);
        pnlAbout.setLayout(pnlAboutLayout);
        pnlAboutLayout.setHorizontalGroup(
            pnlAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAboutLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnlAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAboutHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(spAbout, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        pnlAboutLayout.setVerticalGroup(
            pnlAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAboutLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lblAboutHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(spAbout, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        tabHelp.addTab("About", pnlAbout);

        pnlHelp.setBackground(new java.awt.Color(255, 255, 255));

        lblHelpHeading.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        lblHelpHeading.setText("  Help");
        lblHelpHeading.setOpaque(true);

        spHelp.setBackground(new java.awt.Color(255, 255, 255));
        spHelp.setBorder(null);
        spHelp.setForeground(new java.awt.Color(51, 51, 51));

        txpHelpBody.setBorder(null);
        txpHelpBody.setContentType("text/html"); // NOI18N
        txpHelpBody.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        txpHelpBody.setForeground(new java.awt.Color(51, 51, 51));
        txpHelpBody.setText("<html><div align=\"justify\"><h2>How To Guide</h2><h3>Loading an OWL ontology document</h3><p>There are three ways to load an OWL ontology document. The first is a browse button next to the \"OWL File\" display box which opens a file picker that allows you to select which OWL ontology document you want to load. The other two options do the same thing. <br>Option 1: On the menu bar, select <b>File > Load OWL file</b>.<br>Option 2: The keyboard shortcut \"<i>Ctrl+Shift+L</i>\".</p><br><h3>Navigating the Decision Tree</h3><p>To begin, enter the name of the class into the text box labelled \"Class label\" and click on \"Confirm\". Once the class name has been confirmed the first question will appear in the text area directly below and the \"Next Question\" button as well as the dropdown will be enabled. Select the appropriate response to the question from the dropdown selection. If none of the available options apply, you may choose to use the axiom at the bottom of the screen or return to previous questions. After selecting a response from the dropdown selection, click on \"Next Question\" to continue the classification process. Note that you may click on \"Previous Question\" at any point during the process to undo the latest selection.</p><br><h3>Importing an Axiom</h3><p>Once you have found the BFO classification that best describes the chosen class, you may choose to import the subclass axiom into an OWL ontology document. To do so, click on \"Import Axiom\". If you have not yet loaded an OWL file, the option to create an untitled ontology BFO-merged document will be presented to you. If you decline that option, you may choose to load your local ontology document and click on \"Import Axiom\" again.</p><br><h3>Restarting the Decision Tree</h3><p>To restart the classification process for the current OWL class, from the menu bar, select <b>Edit > Restart</b>. Alternatively, use the keyboard shortcut \"<i>Ctrl+R</i>\".</p><br><h3>Choosing a Different Class</h3><p>To change the OWL class, from the menu bar, select <b>Edit > Change Class</b> or use the keyboard shortcut \"<i>Ctrl+Shift+R</i>\", and the decision process will be reset with the option to change the class name. Once you have changed the class name, click on \"Confirm\" to begin.</p><br></div>");
        txpHelpBody.setCaretColor(new java.awt.Color(51, 51, 51));
        txpHelpBody.setSelectionColor(new java.awt.Color(51, 51, 51));
        spHelp.setViewportView(txpHelpBody);

        javax.swing.GroupLayout pnlHelpLayout = new javax.swing.GroupLayout(pnlHelp);
        pnlHelp.setLayout(pnlHelpLayout);
        pnlHelpLayout.setHorizontalGroup(
            pnlHelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHelpLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnlHelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(lblHelpHeading, javax.swing.GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        pnlHelpLayout.setVerticalGroup(
            pnlHelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHelpLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lblHelpHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(spHelp, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        tabHelp.addTab("Start Page", pnlHelp);

        ExtraWindow.getContentPane().add(tabHelp, java.awt.BorderLayout.CENTER);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(51, 51, 51));

        lblOwlFile.setForeground(new java.awt.Color(51, 51, 51));
        lblOwlFile.setText("  OWL File: ");

        txtOwlFilePath.setEditable(false);

        lblEntityName.setForeground(new java.awt.Color(51, 51, 51));
        lblEntityName.setText("  Class Label:");

        txtEntityName.setPreferredSize(new java.awt.Dimension(7, 23));
        txtEntityName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEntityNameActionPerformed(evt);
            }
        });

        btnEntityName.setBackground(new java.awt.Color(191, 191, 191));
        btnEntityName.setText("Confirm");
        btnEntityName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntityNameActionPerformed(evt);
            }
        });

        txtAreaQuestion.setEditable(false);
        txtAreaQuestion.setColumns(20);
        txtAreaQuestion.setRows(5);
        txtAreaQuestion.setSelectionColor(new java.awt.Color(51, 51, 51));
        spQuestion.setViewportView(txtAreaQuestion);

        cbQuestionOptions.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbQuestionOptionsItemStateChanged(evt);
            }
        });

        btnPrevQuestion.setBackground(new java.awt.Color(191, 191, 191));
        btnPrevQuestion.setText("< Previous Question");
        btnPrevQuestion.setMaximumSize(new java.awt.Dimension(113, 23));
        btnPrevQuestion.setMinimumSize(new java.awt.Dimension(113, 23));
        btnPrevQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevQuestionActionPerformed(evt);
            }
        });

        btnNextQuestion.setBackground(new java.awt.Color(191, 191, 191));
        btnNextQuestion.setText("Next Question >");
        btnNextQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextQuestionActionPerformed(evt);
            }
        });

        btnInsertAxiom.setBackground(new java.awt.Color(191, 191, 191));
        btnInsertAxiom.setText("Insert Axiom");
        btnInsertAxiom.setMaximumSize(new java.awt.Dimension(113, 23));
        btnInsertAxiom.setMinimumSize(new java.awt.Dimension(113, 23));
        btnInsertAxiom.setPreferredSize(new java.awt.Dimension(113, 23));
        btnInsertAxiom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertAxiomActionPerformed(evt);
            }
        });

        txtAxiom.setEditable(false);
        txtAxiom.setPreferredSize(new java.awt.Dimension(7, 23));

        btnBrowse.setBackground(new java.awt.Color(191, 191, 191));
        btnBrowse.setText("Browse");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        spQHistory.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Question History", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 51, 51))); // NOI18N

        txtAreaQHistory.setEditable(false);
        txtAreaQHistory.setColumns(20);
        txtAreaQHistory.setRows(5);
        txtAreaQHistory.setEnabled(false);
        txtAreaQHistory.setSelectionColor(new java.awt.Color(51, 51, 51));
        spQHistory.setViewportView(txtAreaQHistory);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtAxiom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(194, 194, 194))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spQuestion)
                            .addComponent(spQHistory)
                            .addComponent(cbQuestionOptions, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnPrevQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnNextQuestion, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)))
                        .addGap(10, 10, 10))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEntityName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOwlFile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(567, 567, 567))
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnInsertAxiom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(txtOwlFilePath)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(txtEntityName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEntityName, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(10, 10, 10))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnEntityName, btnInsertAxiom, btnNextQuestion, btnPrevQuestion});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblEntityName, lblOwlFile});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblOwlFile)
                    .addComponent(txtOwlFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblEntityName)
                    .addComponent(txtEntityName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEntityName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(7, 7, 7)
                .addComponent(spQHistory, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbQuestionOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPrevQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNextQuestion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAxiom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnInsertAxiom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnBrowse, txtOwlFilePath});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnEntityName, txtEntityName});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnInsertAxiom, btnNextQuestion, btnPrevQuestion, txtAxiom});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblEntityName, lblOwlFile});

        FileMenu.setText("File");

        ImportOWLFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        ImportOWLFile.setText("Load .owl file");
        ImportOWLFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportOWLFileActionPerformed(evt);
            }
        });
        FileMenu.add(ImportOWLFile);

        MenuBar.add(FileMenu);

        jMenuEdit.setText("Edit");

        jMenuRemoveEntity.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuRemoveEntity.setText("Change Class");
        jMenuRemoveEntity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuRemoveEntityActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuRemoveEntity);

        jMenuRestart.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuRestart.setText("Restart");
        jMenuRestart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuRestartActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuRestart);

        MenuBar.add(jMenuEdit);

        jMenuHelp.setText("Help");

        jMenuStartPage.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.ALT_DOWN_MASK));
        jMenuStartPage.setText("Start Page");
        jMenuStartPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuStartPageActionPerformed(evt);
            }
        });
        jMenuHelp.add(jMenuStartPage);

        jMenuAbout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_DOWN_MASK));
        jMenuAbout.setText("About");
        jMenuAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAboutActionPerformed(evt);
            }
        });
        jMenuHelp.add(jMenuAbout);

        MenuBar.add(jMenuHelp);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ImportOWLFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportOWLFileActionPerformed
        int result = FileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION)
        {
            File owl_file = FileChooser.getSelectedFile();
            try{
                this.owl_handler = new OWLHandler(owl_file.getPath());
            }
            catch (
                NullPointerException 
                | OWLOntologyCreationException 
                | FileNotFoundException 
                | AssertionError ex
            )
            { return; } /// TODO: add error popup: Could not load owl file...
            txtOwlFilePath.setText(this.owl_handler.filepath());
            Logger.getLogger(MainFrame.class.getName()).log(
                Level.INFO,
                String.format(
                    "Ontology File: %s\nFrom path: %s", 
                    this.owl_handler.filename(), 
                    this.owl_handler.filepath()
                )
            );
        }
        else
        {
            Logger.getLogger(MainFrame.class.getName()).log(
                Level.FINE,
                "User cancelled owl file selection process."
            );
        }
    }//GEN-LAST:event_ImportOWLFileActionPerformed

    private void btnEntityNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntityNameActionPerformed
        String text = txtEntityName.getText();
        if (txtEntityName.isEnabled() && !text.equals("")){
            /* Future: 
                give user the option to choose IRI fragment
            */
            this.setCurrentEntityName(text);
            this.resetSelection();
        }
    }//GEN-LAST:event_btnEntityNameActionPerformed

    /** 
     * Triggered when 'previous question button is clicked; this method restores 
     * previous question and axiom text 
     */
    private void btnPrevQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevQuestionActionPerformed
        try {
            this.question_controller.goToPreviousQuestion();
            int size = this.question_history.size();
            if (size > 0){
                this.question_history.removeElementAt(size - 1);
            }
            this.resetSelection();
        }
        catch(NullPointerException ex){
            String error_message = ex.getMessage();
            if (error_message != null && error_message.equals("There is no previous question.")){
                btnPrevQuestion.setEnabled(false);
                return;
            }
            throw ex;
        }
    }//GEN-LAST:event_btnPrevQuestionActionPerformed

    private void btnInsertAxiomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertAxiomActionPerformed
        this.importAxiomIntoOWLFile();
    }//GEN-LAST:event_btnInsertAxiomActionPerformed

    /**
     * Triggered when 'next question button is clicked; this method processes 
     * the answer selection and adjusts the display accordingly.
     */
    private void btnNextQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextQuestionActionPerformed
        String selected_answer = cbQuestionOptions.getSelectedItem().toString();
        Logger.getLogger(MainFrame.class.getName()).log(
            Level.INFO,
            String.format("Selected answer: %s", selected_answer)
        );
        this.question_controller.processAnswer(selected_answer);
        String qHistoryItem = String.format("%s (%s)\n%4sSelected Answer:\"%s\"",
            txtAreaQuestion.getText(), txtAxiom.getText(), " ", selected_answer
        );
        this.question_history.add(qHistoryItem);
        this.resetSelection();
    }//GEN-LAST:event_btnNextQuestionActionPerformed

    private void jMenuRestartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuRestartActionPerformed
        this.initDecisionProcess();
        this.resetSelection();
    }//GEN-LAST:event_jMenuRestartActionPerformed

    private void jMenuRemoveEntityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuRemoveEntityActionPerformed
        this.enableSelection(false);
        // clear all questions, selection options and axioms
        txtAreaQHistory.setText("");
        txtAreaQuestion.setText("");
        txtAxiom.setText("");
        cbQuestionOptions.removeAllItems();
        txtEntityName.setEnabled(true);
        // reset decision tree
        this.initDecisionProcess();
    }//GEN-LAST:event_jMenuRemoveEntityActionPerformed

    private void txtEntityNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEntityNameActionPerformed
        // Allows user to type enter instead of having to click button.
        btnEntityNameActionPerformed(evt);
    }//GEN-LAST:event_txtEntityNameActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (this.owl_handler == null) { return; }
        if (this.owl_handler.filepath().equals(this.default_owl_file_path)){
            // i.e. we are using the default BFO owl file
            /// TODO: ask user to confirm new location of file, then move owl file. In future, always request confirmation of changes and location.
        }
        this.saveOWLFile();
    }//GEN-LAST:event_formWindowClosing

    private void cbQuestionOptionsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbQuestionOptionsItemStateChanged
        // Disable Next Question button if No Selection option is chosen
        if (evt.getStateChange() == ItemEvent.SELECTED){
            Object item = evt.getItem();
            btnNextQuestion.setEnabled(
                !item.toString().equals(NO_SELECTION) &&
                !this.question_controller.isFinalQuestion()
            );
       }
    }//GEN-LAST:event_cbQuestionOptionsItemStateChanged

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        ImportOWLFileActionPerformed(evt);
    }//GEN-LAST:event_btnBrowseActionPerformed

    private void jMenuAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAboutActionPerformed
        // TODO add your handling code here:
        String about_text = String.format("<html><div align=\"justify\">"
            + "%s<p>%s</p><br>%s<p>%s</p><p>%s</p><br>%s<p>%s</p><p>%s</p>"
            + "</div>",
            "<h2>BFO 2.0 Classifier V1.0.0:</h2>",
            "Entity classifier that allows users to add entities to the correct "
            + "category in the BFO fundational ontology. Users are required to "
            + "answer a series of questions generated by the classifier and "
            + "the resulting axiom can then be added to the onotlogy.",
            "<h2>Developed By:</h2>",
            "Chiadika Emeruem",
            "Steve Wang",
            "<h2>Supervised By:</h2>",
            "Maria Keet",
            "University of Cape Town"
        );

        //txpAboutBody.setText(about_text);
        tabHelp.setSelectedComponent(pnlAbout);
        ExtraWindow.setVisible(true);
    }//GEN-LAST:event_jMenuAboutActionPerformed

    private void jMenuStartPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuStartPageActionPerformed
        // TODO add your handling code here:
        String help_text = String.format("<html><div align=\"justify\">"
            + "%s%s<p>%s</p><br>%s<p>%s</p><br>%s<p>%s</p><br>%s<p>%s</p><br>%s<p>%s</p><br>"
            + "</div>",
            "<h2>How To Guide</h2>",
            "<h3>Loading an OWL ontology document</h3>",
            "There are three ways to load an OWL ontology document. The first is "
            + "a browse button next to the \"OWL File\" display box which opens "
            + "a file picker that allows you to select which OWL ontology document "
            + "you want to load. The other two options do the same thing. <br>"
            + "Option 1: On the menu bar, select <b>File > Load OWL file</b>.<br>"
            + "Option 2: The keyboard shortcut \"<i>Ctrl+Shift+L</i>\".",
            "<h3>Navigating the Decision Tree</h3>",
            "To begin, enter the name of the class into the text box labelled "
            + "\"Class label\" and click on \"Confirm\". Once the class name "
            + "has been confirmed the first question will appear in the text "
            + "area directly below and the \"Next Question\" button as well as "
            + "the dropdown will be enabled. Select the appropriate response to "
            + "the question from the dropdown selection. If none of the available "
            + "options apply, you may choose to use the axiom at the bottom of the "
            + "screen or return to previous questions. After selecting a response "
            + "from the dropdown selection, click on \"Next Question\" to continue "
            + "the classification process. Note that you may click on \"Previous "
            + "Question\" at any point during the process to undo the latest "
            + "selection.",
            "<h3>Importing an Axiom</h3>",
            "Once you have found the BFO classification that best describes the "
            + "chosen class, you may choose to import the subclass axiom into an "
            + "OWL ontology document. To do so, click on \"Import Axiom\". If you "
            + "have not yet loaded an OWL file, the option to create an untitled "
            + "ontology BFO-merged document will be presented to you. If you "
            + "decline that option, you may choose to load your local ontology "
            + "document and click on \"Import Axiom\" again.",
            "<h3>Restarting the Decision Tree</h3>",
            "To restart the classification process for the current OWL class, "
            + "from the menu bar, select <b>Edit > Restart</b>. Alternatively, "
            + "use the keyboard shortcut \"<i>Ctrl+R</i>\".",
            "<h3>Choosing a Different Class</h3>",
            "To change the OWL class, from the menu bar, select <b>Edit > Change "
            + "Class</b> or use the keyboard shortcut \"<i>Ctrl+Shift+R</i>\", "
            + "and the decision process will be reset with the option to change "
            + "the class name. Once you have changed the class name, click on "
            + "\"Confirm\" to begin."
        );

        tabHelp.setSelectedComponent(pnlHelp);
        ExtraWindow.setVisible(true);
    }//GEN-LAST:event_jMenuStartPageActionPerformed

    private void setupFileChooser(){
        FileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileChooser.setFileFilter(new FileFilter(){
            @Override
            public boolean accept(File currFileOrDir){
                // allows files with the .owl extension and directories.
                boolean visible = (
                    currFileOrDir.isDirectory() || 
                    currFileOrDir.getName().endsWith(".owl")
                );
                return visible;
            }
            
            @Override
            public String getDescription(){
                return ".owl";
            }
        });
    }
    
    private void setCurrentEntityName(String entity_name){
        current_entity_name = entity_name;
        txtEntityName.setEnabled(false);
        Logger.getLogger(MainFrame.class.getName()).log(
            Level.INFO,
            String.format("Current entity name: %s", current_entity_name)
        );
    }
    
    private void enableSelection(boolean enable){
        // enables or disables the form items used for processing questions
        btnPrevQuestion.setEnabled(enable);
        btnNextQuestion.setEnabled(enable);
        btnInsertAxiom.setEnabled(enable);
        cbQuestionOptions.setEnabled(enable);
    }
    
    private void resetSelection(){
        // use current question to fill in question text and answer options
        cbQuestionOptions.removeAllItems();
        txtAreaQHistory.setText(String.join("\n", this.question_history));
        String axiom = String.format(
            "%s \u2291 %s",
            this.current_entity_name,
            this.question_controller.getAxiom()
        );
        String question = this.question_controller.getQuestion().replaceAll(
            "\\[\\]",
            this.current_entity_name
        );
        txtAreaQuestion.setText(question);
        String[] options = this.question_controller.getAnswerOptions();
        for (String option: options) { cbQuestionOptions.addItem(option); }
        if (!this.question_controller.isFinalQuestion()) {
            cbQuestionOptions.addItem(NO_SELECTION); // Add No Selection option
        }
        else
        {
            String display_text = String.format(
                "%sClick on \"Insert Axiom\" to insert the following axiom: %s; "
                + "\nor \"Previous Question\" to return to the previous question.",
                "There are no further questions. ",
                axiom
            );
            txtAreaQuestion.setText(
                String.format("%s\n%s", display_text, question)
            );
        }
        cbQuestionOptions.setEnabled(true);
        // update axiom and unfreeze axiom import button
        txtAxiom.setText(axiom);
        btnInsertAxiom.setEnabled(!axiom.equals(""));
        // freeze/unfreeze next/prev buttons if at root/leaves
        btnPrevQuestion.setEnabled(!this.question_controller.isFirstQuestion());
        btnNextQuestion.setEnabled(!this.question_controller.isFinalQuestion());
    }
    
    private void initDecisionProcess(){
        // reset the decision tree
        this.question_controller.begin();
        this.question_history.removeAllElements();
        if (!this.question_controller.isFirstQuestion()) {
            throw new AssertionError("Restart should return to the first question."); 
        }
    }
    
    private void importAxiomIntoOWLFile(){
        ///TODO: documentation
        // check if an owl file is selected (if not, select default and make a 
        // copy in the home directory) 
        /* Future (2 options):
            (1) prompt user for name and location (path) of existing owl file.
            (2) if default, ask user for the path to save the new owl file.
        */
        if (this.owl_handler == null) {
            try {
                InputStream bfo_2_0_filestream 
                    = FileUtils.getFileFromResourcePackage(this.default_owl_file_path);
                
                String bfo_2_0_path = String.format("%s%s%s", 
                    System.getProperty("user.home"), File.separator, "untitled_ontology.owl"
                );
                
                Logger.getLogger(MainFrame.class.getName()).log(
                    Level.INFO,
                    String.format("OWL path: %s\n", bfo_2_0_path)
                );
                
                this.owl_handler = new OWLHandler(bfo_2_0_filestream, bfo_2_0_path);
                bfo_2_0_filestream.close();
                // update import file text field
                txtOwlFilePath.setText(bfo_2_0_path);
            }
            catch (Exception ex){
                Logger.getGlobal().warning(
                    String.format("%s\nUnable to create %s%s%s",
                        ex,
                        System.getProperty("user.home"), 
                        File.separator, 
                        "untitled_ontology.owl"
                    )
                );
            }
        }
        // confirm insert and owl file
        String message = String.format(
            "Are you sure you want to import \"%s\" into %s",
            txtAxiom.getText(),
            this.owl_handler.filename()
        );
        
        int accept_import = JOptionPane.showConfirmDialog(
            this, message, "Confirm Axiom Import", JOptionPane.YES_NO_OPTION
        );
        
        if (accept_import == JOptionPane.YES_OPTION){
            Logger.getLogger(MainFrame.class.getName()).log(
                Level.INFO,
                String.format(
                    "Importing \"%s\" into %s",
                    txtAxiom.getText(),
                    this.owl_handler.filename()
                )
            );
            String axiom_superclass = this.question_controller.getAxiom();
            boolean success = this.owl_handler.addClassAxiom(
                this.owl_handler.getDomainIRI(this.current_entity_name), 
                "SubClassOf", 
                this.owl_handler.getBFOClassIRI(axiom_superclass.toLowerCase())
            );
            if (success){
                /* Future: 
                    save temporary copy and give user option of saving changes 
                    on exit (allow them to change file name/location)
                */
                this.saveOWLFile();
            }
            System.out.println((success)? "success" : "failure");
        }
    }
    
    private void saveOWLFile(){
        if (this.owl_handler == null){ return; }
        // allow 2 retries
        int retry = 0;
        while (retry < 3){
            try {
                this.owl_handler.saveToFile();
                return;
            }
            catch(OWLOntologyStorageException ex){
                ++retry;
            }
        }
        // if it gets here all retries failed
        Logger.getLogger(MainFrame.class.getName()).log(
            Level.SEVERE, "Could not save OWL file."
        );
        // notify the user
        String error_msg = String.format(
            "An error occurred while saving %s",
            this.owl_handler.filename()
        );
        JOptionPane.showMessageDialog(
            this, error_msg, 
            "Could not save OWL file", 
            JOptionPane.ERROR_MESSAGE
        );
    }
            
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame ExtraWindow;
    private javax.swing.JFileChooser FileChooser;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JMenuItem ImportOWLFile;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnEntityName;
    private javax.swing.JButton btnInsertAxiom;
    private javax.swing.JButton btnNextQuestion;
    private javax.swing.JButton btnPrevQuestion;
    private javax.swing.JComboBox<String> cbQuestionOptions;
    private javax.swing.JMenuItem jMenuAbout;
    private javax.swing.JMenu jMenuEdit;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenuItem jMenuRemoveEntity;
    private javax.swing.JMenuItem jMenuRestart;
    private javax.swing.JMenuItem jMenuStartPage;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblAboutHeading;
    private javax.swing.JLabel lblEntityName;
    private javax.swing.JLabel lblHelpHeading;
    private javax.swing.JLabel lblOwlFile;
    private javax.swing.JPanel pnlAbout;
    private javax.swing.JPanel pnlHelp;
    private javax.swing.JScrollPane spAbout;
    private javax.swing.JScrollPane spHelp;
    private javax.swing.JScrollPane spQHistory;
    private javax.swing.JScrollPane spQuestion;
    private javax.swing.JTabbedPane tabHelp;
    private javax.swing.JTextPane txpAboutBody;
    private javax.swing.JTextPane txpHelpBody;
    private javax.swing.JTextArea txtAreaQHistory;
    private javax.swing.JTextArea txtAreaQuestion;
    private javax.swing.JTextField txtAxiom;
    private javax.swing.JTextField txtEntityName;
    private javax.swing.JTextField txtOwlFilePath;
    // End of variables declaration//GEN-END:variables
}
